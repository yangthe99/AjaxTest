@{
    ViewData["Title"] = "Home Page";
}
@section Styles {

}
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div><hr />
<h2>上課實作</h2>
<hr />
<a asp-controller="Home" asp-action="JsonTest" class="btn btn-primary">JsonTest</a>
<a asp-controller="Home" asp-action="First" class="btn btn-primary">First</a>

<a asp-controller="Home" asp-action="CallAPI" class="btn btn-primary">CallAPI</a>
<a asp-controller="API" asp-action="Avatar" class="btn btn-primary">Avatar</a>
<a asp-controller="Home" asp-action="Address" class="btn btn-primary">json(): Cities</a>
<a asp-controller="Home" asp-action="ShowImg" class="btn btn-primary">blob: ShowImg</a>
<p>#Ajax #promise #async await</p>

<a asp-controller="Home" asp-action="Register" class="btn btn-primary">Register</a>
<a asp-controller="Home" asp-action="RegisterForm" class="btn btn-primary">RegisterForm</a>
<a asp-controller="Home" asp-action="RegisterFile" class="btn btn-primary">檔案上傳</a>
<a asp-controller="Home" asp-action="RegistertoServer" class="btn btn-primary">寫進資料庫</a>
<p>#API #fetch #註冊</p>

<a asp-controller="Home" asp-action="Travel" class="btn btn-primary">景點</a>
<p>#搜尋 #分頁 #排序 #回傳資料</p>

<a asp-controller="Home" asp-action="Cors" class="btn btn-primary">Cors</a>
<p>#WebAPI #Cors</p>

<br />
<hr />
<h2>作業</h2>
<hr />
<a asp-controller="Home" asp-action="Spot" class="btn btn-primary">作業1: Spot</a>
<a asp-controller="Home" asp-action="MemberRegister" class="btn btn-primary">作業2 & 3: 會員註冊含檢查帳號</a>
@* @model IEnumerable<AjaxTest.Models.Address>
<ul>
    @foreach (var add in Model)
    {
        <li>@add.Id</li>
    }
</ul> *@

@section Scripts {
    <script>
        // //宣告定義promise
        // var promise = new Promise(function (resolve, reject) {
        //     //跑一堆程式碼
        //     if (false) { resolve("OK!") }
        //     else { reject("NO!!!!!!!") }
        // });

        // //使用promise
        // promise
        //     .then(result => console.log(result))
        //     .catch(error => console.log(error))
        //     .finally(() => console.log("END."))

        function printSomething(data) {
            const promise = new Promise(function (resolve, reject) { 
                setTimeout(function () { resolve(data) }, 1000);
            })
            return promise;
        }

        // printSomething('A').then(data => { console.log(data)
        //     return printSomething('B').then(data => { console.log(data) })
        // })

        async function Show() {
            let data = await printSomething('A'); console.log(data);
            data = await printSomething('B'); console.log(data);
        };

        Show();

    </script>




}